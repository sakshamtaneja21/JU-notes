Question 1
-------------------
#include<string.h>
main()
{
	char s[]=“Rajasthan !”;
	printf(“\n %d”, *(s+strlen(s));
}

s[0]	s[1]	s[2]	s[3]	s[4]	s[5]	s[6]	s[7]	s[8]	s[9]	s[10]	s[11]
R	a	j	a	s	t	h	a	n		!	NULL
1000	1001	1002	1003	1004	1005	1006	1007	1008	1009	1010	1011

s = Base Address of 1-D array = 1000
strlen(s) = 11
*(s+strlen(s)) = *(1000+11) = *(1011) = NULL

%d = To print the value in int form

#define NULL 0

Final Answer: 0

Question 2
------------------
main()
{
	printf(5+”Fascimile”);
}

OR

main()
{
	char str[]="Fascimile";
	printf("%s", str+5);
}
	
str[0]	str[1]	str[2]	str[3]	str[4]	str[5]	str[6]	str[7]	str[8]	str[9]
F	a	s	c	i	m	i	l	e	NULL
1000	1001	1002	1003	1004	1005	1006	1007	1008	1009

str = base address of str = 1000
str + 5 = 1000 + 5 = 1005

Final Answer: mile

Question 3
-------------------
main()
{
	char ch[20];
	int i;
	for(i=0;i<19;i++)
		*(ch+i) =67;
	*(ch+i)=‘\0’;
	printf(“\n%s”,ch);
}

/*
65 - 90 => A - Z (Capital Letters)
97 - 122 => a - z (Small Case Letters)
48 - 57 => 0 - 9 (Digits)
*/

a[i] = i[a] = *(a+i) = *(i+a)

i=0; i<19
	ch[0] = *(ch+0) = 67;
i=1; i<19
	ch[1] = *(ch+1) = 67;
i=2; 2<19
	ch[2] = *(ch+2) = 67;

------------------------------------------
------------------------------------------
i=18; 18 < 19
	ch[18] = *(ch+18) = 67;
i=19; 19 < 19 (condition false)

*(ch+19) ='\0';

Final Answer: 19 times it will print C

Question 4:
--------------------
main()
{
     char str[]={48,48,48,48,48};
     char *s;
     int i;
     s=str;
     for(i=0;i<5;i++)
     {
            if(*s)
	printf(“%c”,*s);
            s++;
     }
}

str[0]	str[1]	str[2]	str[3]	str[4]	str[5]
48	48	48	48	48	NULL
1000	1001	1002	1003	1004	1005

s = str = 1000

i =0 ; 0 < 5

Final Answer: 00000

Question 5:
-------------------
main()
{
     char str[]={48,49,50,51,52};
     char *s;
     int i;
     s=str;
     for(i=0;i<5;i++)
     {
            if(*s)
	printf(“%c”,*s);
            s++;
     }
}

Final Answer: 01234

Question 6
--------------------
main()
{
      char str1[]={“Hello”};
      char str2[]={“Hello”};
      if(str1==str2)
	printf(“\nEqual”);
      else
	printf(“\nUnequal”);
}

str1[0]	str1[1]	str1[2]	str1[3]	str1[4]	str1[5]
H	e	l	l	o	NULL
1000	1001	1002	1003	1004	1005


str2[0]	str2[1]	str2[2]	str2[3]	str2[4]	str2[5]
H	e	l	l	o	NULL
2000	2001	2002	2003	2004	2005

str1 = base address of str1 = 1000
str2 = base address of str2 = 2000

if(1000 == 2000) X

Final Answer: Unequal

Question 7
-------------------
main()
{
      char str1[]={“Hello”};
      char str2[]={“Hello”};
      if(*str1==*str2)
	printf(“\nEqual”);
      else
	printf(“\nUnequal”);
}

*str1 = *(1000) = H
*str2 = *(2000) = H

if(H == H)
Final Answer: Equal

Question 8
-------------------
main()
{
	char str[]=“Limericks”;
	char *s;
	s=&str[6]-6;
	while(*s)
		printf(“%c”,*s++);
}

str[0]	str[1]	str[2]	str[3]	str[4]	str[5]	str[6]	str[7]	str[8]	str[9]
L	i	m	e	r	i	c	k	s	NULL
1000	1001	1002	1003	1004	1005	1006	1007	1008	1009

s = &str[6] - 6 = 1006 - 6 = 1000

Final Answer: Limericks

Question 9
-------------------
main()
{
	char str[]=“MalayalaM”;
	char *s;
	s=str+8;
	while(s>=str)
	{
		printf(“%c”,*s);
		s--;
	}
}

str[0]	str[1]	str[2]	str[3]	str[4]	str[5]	str[6]	str[7]	str[8]	str[9]
M	a	l	a	y	a	l	a	M	NULL
1000	1001	1002	1003	1004	1005	1006	1007	1008	1009

s = str + 8 = 1000 + 8 = 1008

1008 >= 1000	MalayalaM
1007 >= 1000	
1006 >= 1000
1005 >= 1000
1004 >= 1000
1003 >= 1000
1002 >= 1000
1001 >= 1000
1000 >= 1000
999 >= 1000 (Condition False)

Final Answer: MalayalaM (It will print from reverse side?


Question 10
---------------------
main()
{
      char s[]=“C is a philosophy of life”;
      char t[40];
      char *ss,*tt;
      ss=s;
      tt=t;
      while(*ss)
               *tt++=*ss++;
      *tt=‘\0’;
      printf(“\n%s”,t);
}

For Taking String (To Copy from one to another)
s[] = "Hello";
s[0]	s[1]	s[2]	s[3]	s[4]	s[5]
H	e	l	l	o	NULL
1000	1001	1002	1003	1004	1005


t[0]	t[1]	t[2]	t[3]	t[4]	t[5]
H	e	l	l	o	NULL
2000	2001	2002	2003	2004	2005

Question 11
--------------------
main()
{
      printf(“%c”, “abcdefgh”[4]);
}

OR

main()
{
	char s[]="abcdefgh";
	printf("%c",s[4]);
}

Final Answer: e

Question 12
---------------------
void main()
{
	int a[4][2];
	int b=0,x;
	int i,y;
	for(i=0;i<4;i++)
		for(y=0;y<2;y++)
			a[i][y]=b++;

	x=*(*(a+2)-1);
	printf("%d",x);
}

i=0; 0 <4
	y = 0; 0< 2
		a[0][0] = 0; b = b + 1 = 0 + 1 = 1
	y = 1; 1<2
		a[0][1] = 1; b = b + 1 = 1 + 1 = 2
	y = 2; 2 < 2 X
i = 1; 1 < 4
	y =0; 0<2
		a[1][0] = 2; b = 3
	y = 1;  1<2
		a[1][1] = 3; b=4
	y = 2; 2 < 2 X
.......................
.......................

a[0][0]	a[0][1]	a[1][0]	a[1][1]	a[2][0]	a[2][1]	a[3][0]	a[3][1]
0	1	2	3	4	5	6	7	
1000	1002	1004	1006	1008	1010	1012	1014

a = base address of 2-d array (Row)
*a = base address of 1-d array inside 2-d array (Column)
**a = value at base address of 1-d array inside 2-d array (Value)

x=*(*(a+2)-1)
    =*(*(1000 + 2) - 1)
    =*(*(1008) - 1)
    =*(1008 - 1)
    =*(1006)
    = 3

Final Answer: 3

Question 13
---------------------
int y[4]={6,7,8,9};
int *ptr=y+2;
printf(“%d”,ptr[1]);

y[0]	y[1]	y[2]	y[3]
6	7	8	9
1000	1002	1004	1006

y = base address of 1-d array = 1000

ptr = y + 2 = 1000 + 2 = 1004

a[i] = i[a] = *(a+i) = *(i+a)

ptr[1] = *(ptr+1) = *(1004+1) = *(1006) = 9

Final Answer: 9